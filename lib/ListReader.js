// Generated by CoffeeScript 1.7.1
(function() {
  (function(factory) {
    var When, fs, split;
    if (typeof define === 'function' && define.amd) {
      return define(['fs', 'split', 'when'], factory);
    } else {
      fs = require('fs');
      split = require('split');
      When = require('when');
      return module.exports = factory(fs, split, When);
    }
  })(function(fs, split, When) {
    var ListReader;
    ListReader = (function() {
      function ListReader(path) {
        this.path = path;
      }

      ListReader.prototype.readList = function(path, callback) {
        var firstByte, result, stream;
        if (typeof path === 'function') {
          callback = path;
          path = null;
        }
        if (path == null) {
          path = this.path;
        }
        if (path == null) {
          throw new Error("No path set");
        }
        result = new Array();
        firstByte = true;
        stream = fs.createReadStream(path, {
          encoding: 'utf8'
        }).pipe(split()).on('data', function(line) {
          if (firstByte) {
            line = line.slice(1);
            firstByte = false;
          }
          return result.push(line);
        });
        if (callback) {
          return stream.on('error', callback).on('end', (function() {
            return callback(null, result);
          }));
        } else {
          return When.promise(function(resolve, reject, notify) {
            return stream.on('error', reject).on('end', function() {
              return resolve(result);
            });
          });
        }
      };

      return ListReader;

    })();
    return ListReader;
  });

}).call(this);
